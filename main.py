#==========================================================================================
#============================Объявляем необходимые бибилотеки==============================
#==========================================================================================

#подтянули библиотеки для отправки запросов в интернет
# from _typeshed import Self
import requests
import json
import sys
import Helper as fl
from bs4 import BeautifulSoup
import urllib.request
import re


#==========================================================================================
#===============Отображаем графический интерфейс нашего приложения=========================
#==========================================================================================


#==========================================================================================
#====Производится сбор потенциальных источников информации, согласно введенному запросу====
#==========================================================================================

print("1")
#считываем возможные тематики
themes=open(r"C:\Users\Мария\Desktop\python_test\themes.txt", "r+", encoding="utf-8")

print("2")
#просим ввести запрос для определения тематики
print("Введите запрос для определения тематики")

# #считываем введенный запрос в переменную и преобразовываем её в текст
message=input()


#Проверяем, что в сообщение переданы буквы или цфиры, иначе выключаем программу
if not isinstance(message, str) and not isinstance(message, int):
    print("Ошибка: Сообщение не содержит букв или цифр")
    sys.exit()

#задали переменной параметров библиотеку готовых параметров
params = dict(q=message)

#производим запрос в поисковую систему SEARX по нашему ключевому сообщению
url= "https://searx.roughs.ru/search"

#результаты полученные от сервиса поиска SEARX кладу в переменную "res"
res = (requests.get(url, params=params))

#открываю файл для хранения статуса ответа и записываю в него статус ответа, 
#после чего обязательно закрываю его, чтобы изменения сохранились
code_resp=open(r"C:\Users\Мария\Desktop\python_test\code_resp.txt", "r+", encoding="utf-8")
code_resp.write(str(res.status_code))
code_resp.close()

#вновь открываю файл со статусом ответа, чтобы увидеть появившийся код и считываю его в переменную code_resp_str
code_resp=open(r"C:\Users\Мария\Desktop\python_test\code_resp.txt", "r+", encoding="utf-8")
code_resp_str=code_resp.read()

#функция проверяет код ответа на успешность или ошибку
if (code_resp_str[0]=="2"):
    print("тут реакция на 200-ую")
elif (code_resp_str[0]=="5"):
    print("тут реакция на 500-ую")
else:
    print("тут реакция на 400-ую")


    #в переменную положил конкретное поле ответа "text", в котором лежит весь контент ответа
res_text=res.text

    #открываю файл для записи ответа по запросу, записываю туда ответ и закрываю файл 
resp=open(r"C:\Users\Мария\Desktop\python_test\resp.txt", "r+", encoding="utf-8")
resp.write(res_text)
resp.close()



    #==========================================================================================
    #================================Подготовка к сбору информации=============================
    #==========================================================================================

    #Проверяем, есть ли результаты поиска по запросу или их нет совсем.
    #Если есть - вызываем функцию для анализа полученных результатов поиска
if (fl.checkAlertInTheResponse() =="true"):
    print("true")

    # функция анализирует полученные результаты поиска и собирает один файл, 
    # в котором будут поля с потенциальными ссылками на ресурсы по теме запроса
fl.checkResponseLink()

    # Инициализируем переменную со списком ссылок ресурсов по нашему запросу
fl.buildLinkResponseList()

    # resp=open(r"C:\Users\Мария\Desktop\python_test\responseLink.txt", "r+", encoding="utf-8")
    # lb2=tk.Label(window, text=res)
    # lb1.grid(column=0, row=2)


    # resp=open(r"C:\Users\Мария\Desktop\python_test\responseLink.txt", "r+", encoding="utf-8")
    # txt.tk.insert(INSERT,res)
    #==========================================================================================
    #================================Сбор информации для анализа===============================
    #==========================================================================================

    # from urllib 
